omg: 1
lifecycle:
  startup:
    command:
      - node
      - app.js
info:
  version: 1.0.0
  title: FOAAS
  description: 'FOAAS as a OMG microservice'
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
  contact:
    name: 'Aurelien ARINO'
    url: 'https://storyscript.io'
    email: aurelien@storyscript.io
health:
  http:
    path: /health
    port: 5000
actions:
  anyway:
    help: 'Who the fuck are you anyway'
    arguments:
      company:
        type: string
        in: query
        help: Company
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /anyway
      contentType: text/plain
    output:
      type: string
  asshole:
    help: Asshole
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /asshole
      contentType: text/plain
    output:
      type: string
  awesome:
    help: Awesome
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /awesome
      contentType: text/plain
    output:
      type: string
  back:
    help: 'Back the fuck off'
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /back
      contentType: text/plain
    output:
      type: string
  bag:
    help: Bag
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /bag
      contentType: text/plain
    output:
      type: string
  ballmer:
    help: Ballmer
    arguments:
      name:
        type: string
        in: query
        help: Name
      company:
        type: string
        in: query
        help: Company
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /ballmer
      contentType: text/plain
    output:
      type: string
  bday:
    help: Bday
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /bday
      contentType: text/plain
    output:
      type: string
  because:
    help: Because
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /because
      contentType: text/plain
    output:
      type: string
  blackadder:
    help: Blackadder
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /blackadder
      contentType: text/plain
    output:
      type: string
  bm:
    help: 'Bravo Mike'
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /bm
      contentType: text/plain
    output:
      type: string
  bucket:
    help: Bucket
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /bucket
      contentType: text/plain
    output:
      type: string
  bus:
    help: Bus
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /bus
      contentType: text/plain
    output:
      type: string
  bye:
    help: Bye
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /bye
      contentType: text/plain
    output:
      type: string
  caniuse:
    help: 'Can I Use'
    arguments:
      tool:
        type: string
        in: query
        help: Tool
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /caniuse
      contentType: text/plain
    output:
      type: string
  chainsaw:
    help: Chainsaw
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /chainsaw
      contentType: text/plain
    output:
      type: string
  cocksplat:
    help: Cocksplat
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /cocksplat
      contentType: text/plain
    output:
      type: string
  cool:
    help: 'Cool Story'
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /cool
      contentType: text/plain
    output:
      type: string
  cup:
    help: Cup
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /cup
      contentType: text/plain
    output:
      type: string
  dalton:
    help: Dalton
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /dalton
      contentType: text/plain
    output:
      type: string
  deraadt:
    help: '{name} you are being the usual slimy hypocritical asshole... You may have had value ten years ago, but people will see that you don''t anymore.'
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /deraadt
      contentType: text/plain
    output:
      type: string
  diabetes:
    help: Diabetes
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /diabetes
      contentType: text/plain
    output:
      type: string
  donut:
    help: Donut
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /donut
      contentType: text/plain
    output:
      type: string
  dosomething:
    help: 'Do Something'
    arguments:
      do:
        type: string
        in: query
        help: Do
      something:
        type: string
        in: query
        help: Something
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /dosomething
      contentType: text/plain
    output:
      type: string
  equity:
    help: Equity
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /equity
      contentType: text/plain
    output:
      type: string
  everyone:
    help: Everyone
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /everyone
      contentType: text/plain
    output:
      type: string
  everything:
    help: Everything
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /everything
      contentType: text/plain
    output:
      type: string
  family:
    help: Family
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /family
      contentType: text/plain
    output:
      type: string
  fascinating:
    help: Fascinating
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /fascinating
      contentType: text/plain
    output:
      type: string
  field:
    help: 'Field of Fucks'
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
      reference:
        type: string
        in: query
        help: Reference
    http:
      port: 5000
      method: get
      path: /field
      contentType: text/plain
    output:
      type: string
  flying:
    help: Flying
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /flying
      contentType: text/plain
    output:
      type: string
  fts:
    help: 'Fuck That Shit'
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /fts
      contentType: text/plain
    output:
      type: string
  fyyff:
    help: FYYFF
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /fyyff
      contentType: text/plain
    output:
      type: string
  gfy:
    help: 'Golf Foxtrot Yankee'
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /gfy
      contentType: text/plain
    output:
      type: string
  give:
    help: Give
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /give
      contentType: text/plain
    output:
      type: string
  greed:
    help: Greed
    arguments:
      noun:
        type: string
        in: query
        help: Noun
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /greed
      contentType: text/plain
    output:
      type: string
  horse:
    help: 'Fuck you and the horse you rode in on'
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /horse
      contentType: text/plain
    output:
      type: string
  immensity:
    help: Immensity
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /immensity
      contentType: text/plain
    output:
      type: string
  ing:
    help: Fucking
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /ing
      contentType: text/plain
    output:
      type: string
  keep:
    help: Keep
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /keep
      contentType: text/plain
    output:
      type: string
  keepcalm:
    help: 'Keep Calm'
    arguments:
      reaction:
        type: string
        in: query
        help: Reaction
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /keepcalm
      contentType: text/plain
    output:
      type: string
  king:
    help: King
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /king
      contentType: text/plain
    output:
      type: string
  life:
    help: Life
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /life
      contentType: text/plain
    output:
      type: string
  linus:
    help: Linus
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /linus
      contentType: text/plain
    output:
      type: string
  look:
    help: Look
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /look
      contentType: text/plain
    output:
      type: string
  looking:
    help: Looking
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /looking
      contentType: text/plain
    output:
      type: string
  madison:
    help: Madison
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /madison
      contentType: text/plain
    output:
      type: string
  maybe:
    help: Maybe
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /maybe
      contentType: text/plain
    output:
      type: string
  me:
    help: 'Fuck Me'
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /me
      contentType: text/plain
    output:
      type: string
  mornin:
    help: mornin
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /mornin
      contentType: text/plain
    output:
      type: string
  no:
    help: No
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /no
      contentType: text/plain
    output:
      type: string
  nugget:
    help: Nugget
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /nugget
      contentType: text/plain
    output:
      type: string
  off:
    help: 'Fuck Off'
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /off
      contentType: text/plain
    output:
      type: string
  off_with:
    help: 'Fuck Off With'
    arguments:
      behavior:
        type: string
        in: query
        help: Behavior
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /off-with
      contentType: text/plain
    output:
      type: string
  outside:
    help: Outside
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /outside
      contentType: text/plain
    output:
      type: string
  particular:
    help: 'This Thing In Particular'
    arguments:
      thing:
        type: string
        in: query
        help: Thing
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /particular
      contentType: text/plain
    output:
      type: string
  pink:
    help: Pink
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /pink
      contentType: text/plain
    output:
      type: string
  problem:
    help: Problem
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /problem
      contentType: text/plain
    output:
      type: string
  programmer:
    help: Programmer
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /programmer
      contentType: text/plain
    output:
      type: string
  pulp:
    help: Pulp
    arguments:
      language:
        type: string
        in: query
        help: Language
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /pulp
      contentType: text/plain
    output:
      type: string
  question:
    help: Question
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /question
      contentType: text/plain
    output:
      type: string
  ratsarse:
    help: 'Rat''s Arse'
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /ratsarse
      contentType: text/plain
    output:
      type: string
  retard:
    help: Retard
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /retard
      contentType: text/plain
    output:
      type: string
  ridiculous:
    help: 'That''s fucking ridiculous'
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /ridiculous
      contentType: text/plain
    output:
      type: string
  rtfm:
    help: RTFM
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /rtfm
      contentType: text/plain
    output:
      type: string
  sake:
    help: sake
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /sake
      contentType: text/plain
    output:
      type: string
  shakespeare:
    help: Shakespeare
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /shakespeare
      contentType: text/plain
    output:
      type: string
  shit:
    help: 'Fuck This Shit'
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /shit
      contentType: text/plain
    output:
      type: string
  shutup:
    help: 'Shut Up'
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /shutup
      contentType: text/plain
    output:
      type: string
  single:
    help: Single
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /single
      contentType: text/plain
    output:
      type: string
  thanks:
    help: Thanks
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /thanks
      contentType: text/plain
    output:
      type: string
  that:
    help: 'Fuck That'
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /that
      contentType: text/plain
    output:
      type: string
  think:
    help: 'You Think'
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /think
      contentType: text/plain
    output:
      type: string
  thinking:
    help: Thinking
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /thinking
      contentType: text/plain
    output:
      type: string
  this:
    help: 'Fuck This'
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /this
      contentType: text/plain
    output:
      type: string
  thumbs:
    help: 'This Guy'
    arguments:
      from:
        type: string
        in: query
        help: From
      name:
        type: string
        in: query
        help: Name
    http:
      port: 5000
      method: get
      path: /thumbs
      contentType: text/plain
    output:
      type: string
  too:
    help: Too
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /too
      contentType: text/plain
    output:
      type: string
  tucker:
    help: Tucker
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /tucker
      contentType: text/plain
    output:
      type: string
  what:
    help: What
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /what
      contentType: text/plain
    output:
      type: string
  xmas:
    help: Xmas
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /xmas
      contentType: text/plain
    output:
      type: string
  yoda:
    help: Yoda
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /yoda
      contentType: text/plain
    output:
      type: string
  you:
    help: 'Fuck You'
    arguments:
      name:
        type: string
        in: query
        help: Name
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /you
      contentType: text/plain
    output:
      type: string
  zayn:
    help: Zayn
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /zayn
      contentType: text/plain
    output:
      type: string
  zero:
    help: Zero
    arguments:
      from:
        type: string
        in: query
        help: From
    http:
      port: 5000
      method: get
      path: /zero
      contentType: text/plain
    output:
      type: string
